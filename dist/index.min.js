!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("log4js"),require("fs"),require("app-root-path"),require("path"),require("chalk")):"function"==typeof define&&define.amd?define(["exports","log4js","fs","app-root-path","path","chalk"],r):r((e=e||self).Index={},e.log4js,e.fs,e["app-root-path"],e.path,e.chalk)}(this,(function(e,r,t,n,o,s){"use strict";function a(e,r,t,n,o,s,a){try{var u=e[s](a),i=u.value}catch(e){return void t(e)}u.done?r(i):Promise.resolve(i).then(n,o)}t=t&&t.hasOwnProperty("default")?t.default:t,n=n&&n.hasOwnProperty("default")?n.default:n,o=o&&o.hasOwnProperty("default")?o.default:o,s=s&&s.hasOwnProperty("default")?s.default:s;var u=o.resolve,i=(o.join,u(__dirname),u(n.path,"./logs")),g={appenders:{errorLogger:{type:"dateFile",filename:i+"/error/error",alwaysIncludePattern:!0,pattern:"yyyy-MM-dd-hh.log",path:"/error"},resLogger:{type:"dateFile",filename:i+"/response/response",alwaysIncludePattern:!0,pattern:"yyyy-MM-dd-hh.log",path:"/response"},outsideLogger:{type:"dateFile",filename:i+"/outside/outsideFile",alwaysIncludePattern:!0,pattern:"yyyy-MM-dd-hh.log",path:"/outside"}},categories:{default:{appenders:["resLogger","errorLogger","outsideLogger"],level:"info"},errorLogger:{appenders:["errorLogger"],level:"error"},resLogger:{appenders:["resLogger"],level:"info"},outsideLogger:{appenders:["outsideLogger"],level:"info"}},baseLogPath:i};r.configure(g);var l={},d=function(e){t.existsSync(e)||(t.mkdirSync(e),console.log("createPath:"+e))};g.baseLogPath&&(d(g.baseLogPath),Object.values(g.appenders).forEach((function(e){e.path&&d(g.baseLogPath+e.path)})));var p=r.getLogger("errorLogger"),c=r.getLogger("resLogger"),f=r.getLogger("outsideLogger");l.logError=function(e,r,t){e&&r&&p.error(y(e,r,t))},l.logResponse=function(e,r){e&&c.info(h(e,r))},l.logOutside=function(e){f.info(m(e))};var h=function(e,r){var t="";return t+="\n*************** response log start ***************\n",t+=v(e.request,r),t+="response status: "+e.status+"\n",t+="response body: \n"+JSON.stringify(e.body)+"\n",t+="*************** response log end ***************\n"},y=function(e,r,t){var n="";return n+="\n*************** error log start ***************\n",n+=v(e.request,t),n+="err name:"+r.name+"\n",n+="err message:"+r.message+"\n",n+="err stack:"+r.stack+"\n",n+="*************** error log end ***************\n"},v=function(e,r){var t="",n=e.method;return t+="request method: "+n+"\n",t+="request originalUrl: "+e.originalUrl+"\n",t+="request client ip: "+e.ip+"\n",t+="GET"===n?"request query: "+JSON.stringify(e.query)+"\n":"request body: \n"+JSON.stringify(e.body)+"\n",t+="response time:"+r+"\n"},m=function(e){var r="";return r+="\n*************** outside log start ***************\n",r+=e+"\n",r+="*************** outside log end ***************\n"},L=l.logOutside,q=function(e){var r=e.succeedOnChange,t=e.errOnChange;return(function(){var e,n=(e=regeneratorRuntime.mark((function e(n,o){var a,u,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=new Date,i="GET"===n.request.method?"":JSON.stringify(n.request.body),e.prev=2,e.next=5,o();case 5:u=new Date-a,console.log(s.blue("%s")+" "+n.request.method+" "+n.request.url+" %s",(new Date).toLocaleString(),i),l.logResponse(n,u),r&&r(n),e.next=19;break;case 11:e.prev=11,e.t0=e.catch(2),n.response.body={message:e.t0.message},u=new Date-a,console.log(s.red("%s")+" "+n.request.method+" "+n.request.url+" %s error message: "+s.red("%s"),(new Date).toLocaleString(),i,e.t0.message),l.logError(n,e.t0,u),n.app.emit("error",e.t0,n),t&&t(n,e.t0);case 19:case"end":return e.stop()}}),e,null,[[2,11]])})),function(){var r=this,t=arguments;return new Promise((function(n,o){var s=e.apply(r,t);function u(e){a(s,n,o,u,i,"next",e)}function i(e){a(s,n,o,u,i,"throw",e)}u(void 0)}))});return function(e,r){return n.apply(this,arguments)}}())};e.koaLogger=function(e){void 0===e&&(e={});var r=e,t=r.succeedOnChange,n=r.errOnChange;return q({succeedOnChange:t,errOnChange:n})},e.logOutside=L,e.logUtil=l,Object.defineProperty(e,"__esModule",{value:!0})}));
